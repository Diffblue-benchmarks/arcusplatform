/*
 * Copyright 2019 Arcus Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {

   repositories {
      if ("${use_maven_local}" == "true") {
         mavenLocal()
      }

      mavenCentral()
      jcenter()
   }

   apply from: file("${rootDir}/gradle/buildscript.gradle"), to: buildscript
   dependencies {
      //Leave these here and not in common build scripts as javafx plugin pulls A LOT of dependencies we don't want in main project
      // PKI tools
      classpath "gradle.plugin.org.akhikhl.gretty:gretty:1.4.2"
      // triage
      classpath "org.javafxports:jfxmobile-plugin:1.3.10"
   }
}

repositories {
   if ("${use_maven_local}".toString() == "true") {
      mavenLocal()
   }

   mavenCentral()
   jcenter()
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
}


////////////////////////////////////////////////////////////////////////////////
// Figure out the version number to used using the following:
// 1. The properties version_major, version_minor, version_patch, and
//    version_prerelease are read from the gradle.properties file.
// 2. The git commit hash for HEAD is determined using grgit.
// 3. The current git branch is determined using grgit.
// 4. If the current branch is "master" then version_prerelease is overridden
//    to be "-SNAPSHOT".
// 5. The build version is set to "major.minor.patch-prerelease"
// 6. The agent version is set to "major.minor.patch-prerelease+commit"
////////////////////////////////////////////////////////////////////////////////

// version parts
def version_props = new Properties();
version_props.load(file("version.properties").newReader())

ext.version_major = version_props.major
ext.version_minor = version_props.minor
ext.version_patch = version_props.patch
ext.version_qualifier = version_props.qualifier

// full version numbers
ext.buildVersion = "${version_major}.${version_minor}.${version_patch}${version_qualifier}"
ext.platformVersion = "${version_major}.${version_minor}.${version_patch}${version_qualifier}"
ext.dockerVersion = "${version_major}.${version_minor}.${version_patch}"
ext.toolsVersion = "${version_major}.${version_minor}.${version_patch}${version_qualifier}"
ext.version = "${version_major}.${version_minor}.${version_patch}${version_qualifier}"
ext.version_prerelease = "${version_qualifier}"

tasks.withType(Tar) {
   compression = Compression.GZIP
   extension = "tar.gz"

   release.dependsOn << it
}

println "Building tools v${toolsVersion}"

apply from: file("${rootDir}/gradle/release.gradle")

