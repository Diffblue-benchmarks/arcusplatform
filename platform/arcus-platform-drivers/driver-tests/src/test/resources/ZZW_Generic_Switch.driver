/*
 * Copyright 2019 Arcus Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Driver for a standard z-wave switch
 */
driver			"ZZWGenericSwitchDriver"		// use ZZW prefix so driver is used after any non-generic drivers
description		"Generic Driver for a Z-Wave switch"
version			"3.0"
protocol		"ZWAV"
deviceTypeHint	"swit"
vendor 			"Unknown"
model 			"Unknown"

matcher			'ZWAV:CommandClasses': [0x25]
capabilities	DevicePower, Switch

def byte SWITCH_ON		= 0xff
def byte SWITCH_OFF		= 0x00

DevicePower.source 		DevicePower.SOURCE_LINE
DevicePower.linecapable	true

onConnected {
	ZWave.switch_binary.get()
}

setAttributes('swit') {
	log.debug "Received message " + message
	
	def attributes = message.attributes;
	for(attribute in attributes) {
		switch(attribute.key) {
		case Switch.state:
			ZWave.switch_binary.set(attribute.value == 'ON' ? SWITCH_ON : SWITCH_OFF);
			break;
			
		default:
			// TODO throw an exception?
			log.error "Unrecognized attribute: " + attribute
		}
	}
}

onZWaveMessage.switch_binary.report {
	log.debug "Received binary switch report " + message
	Switch.state message.command.get('value') == SWITCH_ON ? Switch.STATE_ON : Switch.STATE_OFF;
}

