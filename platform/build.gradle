/*
 * Copyright 2019 Arcus Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
   if (!project.hasProperty("iris_platform_version")) {
      ext.iris_platform_version = "${iris_version}"
   }

   repositories {
      if ("${use_maven_local}" == "true") {
         mavenLocal()
      }

      mavenCentral()
      jcenter()
   }

   apply from: file("${rootDir}/gradle/buildscript.gradle"), to: buildscript
}

repositories {
   if ("${use_maven_local}".toString() == "true") {
      mavenLocal()
   }

   mavenCentral()
   jcenter()
}


////////////////////////////////////////////////////////////////////////////////
// Define properties that can be accessed by all of the subprojects
////////////////////////////////////////////////////////////////////////////////

println "Building with Iris Version ${iris_version}"

// version parts
def version_props = new Properties();
version_props.load(file("version.properties").newReader())

ext.version_major = version_props.major
ext.version_minor = version_props.minor
ext.version_patch = version_props.patch
ext.version_qualifier = version_props.qualifier

// full version numbers
ext.buildVersion = "${version_major}.${version_minor}.${version_patch}${version_qualifier}"
ext.platformVersion = "${version_major}.${version_minor}.${version_patch}${version_qualifier}"
ext.dockerVersion = "${version_major}.${version_minor}.${version_patch}"
println "Building platform v${platformVersion}"

apply from: file("${rootDir}/gradle/release.gradle")


